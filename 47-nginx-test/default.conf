# 负载均衡
# 策略一: 轮询, 默认方式
# 策略二: weight 权重, 优先级高的请求更多
# 策略三: ip_hash, 根据ip地址进行hash, 保证同一个ip的请求都会转发到同一个服务器
# 策略四: fair, 根据服务器的响应时间进行分配, 响应时间短的服务器优先分配, 这个需要安装nginx-upstream-fair插件
upstream nest-server {
  ip_hash;
  server 172.20.10.2:3000;
  server 172.20.10.2:3001;
}

server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

   # 精准匹配, 匹配到 /111/ 的请求
    location = /111/ {
    default_type text/plain;
    return 200 "111 success";
    }

    # 前缀匹配, 匹配到 /222 开头的请求
    location /222 {
        default_type text/plain;
        # $uri 为请求的URI
        return 200 $uri;
    }

    # 加了~ 正则匹配, 匹配到 /333/bbb.*.html 的请求, 区分大小写
    location ~ ^/333/bbb.*\.html$ {
        default_type text/plain;
        return 200 $uri;
    }

    # 加了~* 正则匹配, 匹配到 /444/AAA.*.html 的请求, 不区分大小写
    location ~* ^/444/AAA.*\.html$ {
        default_type text/plain;
        return 200 $uri;
    }

    # ^~ 提升优先级的前缀匹配, 匹配到 /444/ 的请求
    location ^~ /444 {
        default_type text/plain;
        return 200 'xxxx';
    }

    # alias 别名, 寻找资源时会变成去查找 /dddd/xxx/xxx/xxx的资源
    # location /222 {
    #     alias /dddd;
    # }

    # root 根目录, 寻找资源时会变成去查找 /dddd/222/xxx/xxx的资源
    # location /222 {
    #     root /dddd;
    # }

    # proxy_pass 反向代理, 可以将请求转发到其他服务器, 透视投屏的修改请求头\响应头
    location ^~ /api {
        proxy_set_header Host $host;
        proxy_set_header name faiz-gear;
        proxy_pass http://nest-server;
    }


    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

